{"version":3,"sources":["services/API.js","components/Spinner.jsx","components/MovieCard.jsx","components/MoviesOnCinema.jsx","components/PopularMovies.jsx","components/TopRankedMovies.jsx","pages/HomePage.js","components/Navigation.js","components/Pagination.jsx","pages/GenrePage.jsx","pages/GenreListPage.jsx","components/ActorsList.jsx","pages/MoviePage.jsx","pages/MoviesOnCinemaPage.jsx","pages/TopRatedMovies.jsx","pages/MostPopularMoviesPage.jsx","components/MovieList.jsx","pages/ActorPage.jsx","App.js","index.js","css/MoviePage.module.css","css/ActorPage.module.css","css/ActorsList.module.css","css/MovieCard.module.css"],"names":["API_KEY","prefix","axios","defaults","baseURL","get","endpoint","a","data","getNowPlaying","getPopular","getTopRated","getGenres","getMoviesInGenre","genreId","page","getMovieById","id","getMoviesForActor","getActorById","movies","actor","Spinner","color","MovieCard","movie","console","log","className","styles","hoverZoom","to","style","textDecoration","Card","width","background","item","first","Img","variant","src","height","second","imgAfter","textAfter","Body","Text","cardTitle","title","cardText","MoviesOnCinema","useQuery","isLoading","isError","error","Container","Row","results","slice","map","i","Col","sm","md","PopularMovies","TopRankedMovies","HomePage","Navigation","Navbar","bg","expand","Toggle","Collapse","Nav","Pagination","setPage","isPreviousData","total","Button","onClick","currentPage","Math","max","disabled","GenrePage","useUrlSearchParams","Number","searchParams","setSearchParams","useState","useParams","useEffect","keepPreviousData","lg","GenreListPage","ListGroup","listContainer","genres","genre","genreContainer","name","ActorsList","actors","xs","actorContainer","Image","thumbnail","actorName","MoviePage","moviePageContainer","movieinfocontainer","miniwrapper","posterContainer","poster","alt","descContainer","bold","runtime","credits","crew","overview","cast","MoviesOnCinemaPage","maxHeight","TopRatedMovies","MostPopularMoviesPage","MovieList","movielistTitle","ActorPage","bioText","biography","actorsMovie","App","exact","path","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","staleTime","ReactDOM","render","StrictMode","QueryClientProvider","client","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5fa51507.chunk.js","sourcesContent":["\n\nimport axios from \"axios\";\n\nconst API_KEY = \"d362ef15a49581e6e16a5e0c2847b919\";\n\nexport const prefix = \"https://image.tmdb.org/t/p/w400/\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\n\n/**\n *\n * Get get movies with various endpoints\n * returns a @promise\n */\n\nconst get = async (endpoint) => {\n  const data = await axios.get(endpoint);\n  return data;\n};\n\n//get movies playing on cinema \nexport const getNowPlaying = async () => {\n  const data = await get(`/movie/now_playing?api_key=${API_KEY}&region=se`);\n  return data.data;\n};\n\n//get most popular movies  in sweden right now\nexport const getPopular = async () => {\n  const data = await get(\n    `/movie/popular?api_key=${API_KEY}&language=en-US&page=1&region=se`\n  );\n  return data.data;\n};\n\n//get top rated movies in sweden\nexport const getTopRated = async () => {\n  const data = await get(`/movie/top_rated?api_key=${API_KEY}&region=se`);\n\n  return data.data;\n};\n\n// list of genres\nexport const getGenres = async () => {\n  const data = await get(`/genre/movie/list?api_key=${API_KEY}`);\n\n  return data.data;\n};\n\n//movies by genre\nexport const getMoviesInGenre = async (genreId, page) => {\n  const data = await get(\n    `/discover/movie?api_key=${API_KEY}&with_genres=${genreId}&page=${page}`\n  );\n\n  return data.data;\n};\n\n// get movie by id\n\nexport const getMovieById = async (id) => {\n  const data = await get(\n    `/movie/${id}?&append_to_response=credits&api_key=${API_KEY}`\n  );\n  return data.data;\n};\n\n//get movies for an actor\n\nconst getMoviesForActor = async (id) => {\n  const data = await get(\n    `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_people=${id}`\n  );\n\n  return data.data;\n};\n\n\n\nexport const getActorById = async (id) => {\n  const data = await get(`/person/${id}?api_key=${API_KEY}`);\n  // make request for the actors movies and combine in respons.\n  const movies = await getMoviesForActor(id);\n  return { movies, actor: data.data };\n};\n","import React from \"react\";\nimport { BounceLoader } from \"react-spinners\";\n\nconst Spinner = () => {\n  return <BounceLoader color=\"black\" />;\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"../css/MovieCard.module.css\";\n\nimport { Card } from \"react-bootstrap\";\n\nconst prefix = \"https://image.tmdb.org/t/p/w400/\";\n\nconst MovieCard = ({ movie }) => {\n  console.log(movie);\n  return (\n    <div className={styles.hoverZoom}>\n            <Link to={`/movie/${movie.id}`} style={{ textDecoration: 'none', color: 'white' }}>\n            <Card className={`mx-1 mx-md-3`} style={{ width: '270px', background: 'none' }} >\n\n                <div className={styles.item}>\n                    <span className={styles.first}>\n                        <Card.Img variant=\"top\" src={`${prefix}${movie[\"poster_path\"]}`} style={{ height: '390px' }} />\n                    </span>\n                    <span className={styles.second}>\n                        <Card.Img className={styles.imgAfter} variant=\"top\" src={`${prefix}${movie[\"poster_path\"]}`} />\n                        <p className={styles.textAfter}>\n                         \n                        </p>\n                    </span>\n                </div >\n                <Card.Body>\n                    <Card.Text className={`${styles.cardTitle} text-center mb-1`}>{movie.title}</Card.Text>\n                    <Card.Text className={`${styles.cardText} text-center`}>\n                    </Card.Text>\n                </Card.Body>\n            </Card></Link> \n        </div>\n  );\n};\n\nexport default MovieCard;\n\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nimport { useQuery } from \"react-query\";\nimport { getNowPlaying } from \"../services/API\";\n\nimport Spinner from \"./Spinner\";\nimport MovieCard from \"./MovieCard\";\n\nimport { Row, Col } from \"react-bootstrap\";\n\nconst MoviesOnCinema = () => {\n  const { data, isLoading, isError, error } = useQuery(\n    \"now-playing\",\n    getNowPlaying\n  );\n\n  if (isError) return <div>{error}</div>;\n\n  return (\n    <Container>\n      {isLoading && <Spinner />}\n      <Row>\n        {data &&\n          data.results.slice(0, 4).map((movie, i) => {\n            return (\n              <Col key={i} sm={12} md={3}>\n                <MovieCard movie={movie} />\n              </Col>\n            );\n          })}\n      </Row>\n    </Container>\n  );\n};\n\nexport default MoviesOnCinema;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport { useQuery } from \"react-query\";\nimport { getPopular } from \"../services/API\";\nimport Spinner from \"../components/Spinner\";\nimport MovieCard from \"./MovieCard\";\n\nconst PopularMovies = () => {\n  const { data, isLoading, isError, error } = useQuery(\"popular\", getPopular);\n\n  return (\n    <Container>\n      {isError && <h1>{error}</h1>}\n      {isLoading && <Spinner />}\n      <Row>\n        {data &&\n          data.results.map((movie, i) => {\n            return (\n              <Col key={i} sm={12} md={3}>\n                <MovieCard movie={movie} />{\" \"}\n              </Col>\n            );\n          })}\n      </Row>\n    </Container>\n  );\n};\n\nexport default PopularMovies;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport { useQuery } from \"react-query\";\nimport { getTopRated } from \"../services/API\";\nimport Spinner from \"../components/Spinner\";\nimport MovieCard from \"./MovieCard\";\nconst TopRankedMovies = () => {\n  // fetch movies that is top ranked in sweden\n  const { data, isLoading, isError, error } = useQuery(\n    \"top-rated\",\n    getTopRated\n  );\n\n  if (isError) return <div>{error}</div>;\n\n  return (\n    <Container>\n      {isLoading && <Spinner />}\n      <Row>\n        {data &&\n          data.results.slice(0, 4).map((movie, i) => {\n            return (\n              <Col key={i} sm={12} md={3}>\n                <MovieCard movie={movie} />\n              </Col>\n            );\n          })}\n      </Row>\n    </Container>\n  );\n};\n\nexport default TopRankedMovies;\n","import React from \"react\";\n\nimport MoviesOnCinema from \"../components/MoviesOnCinema\";\nimport PopularMovies from \"../components/PopularMovies\";\nimport TopRankedMovies from \"../components/TopRankedMovies\";\n\nconst HomePage = () => {\n  return (\n    <div>\n      <h1>HomePage</h1>\n      <div style={{ width: \"80%\" }}>\n        <h3 className=\"mt-5\">Filmer på bio just nu</h3>\n        <MoviesOnCinema />\n        <h3 className=\"mt-5\">Populäraste filmerna</h3>\n        <PopularMovies />\n        <h3 className=\"mt-5\">Topprankade filmer</h3>\n        <TopRankedMovies />\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\nconst Navigation = () => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\">\n      <Container>\n        <Link to=\"/\" className=\"navbar-brand\">\n          The Movie Hub\n        </Link>\n\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ms-auto\">\n            <NavLink to=\"/top-rated\" className=\"nav-link\">\n              Top Rated\n            </NavLink>\n\n            <NavLink to=\"/popular\" className=\"nav-link\">\n              Popular\n            </NavLink>\n\n            <NavLink to=\"/cinema\" className=\"nav-link\">\n              Cinema\n            </NavLink>\n\n            <NavLink to=\"/genre\" className=\"nav-link\">\n              Genres\n            </NavLink>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nconst Pagination = ({ page, setPage, isPreviousData, total }) => {\n  return (\n    <div className=\"pagination d-flex justify-content-between align-items-center m-4\">\n      <Button\n        onClick={() => setPage((currentPage) => Math.max(currentPage - 1, 1))}\n        disabled={page === 1}\n      >\n        Previous Page\n      </Button>\n      <span>Current Page: {page}</span>\n\n      <Button\n        onClick={() => {\n          if (!isPreviousData && page !== total) {\n            setPage((currentPage) => currentPage + 1);\n          }\n        }}\n        //make nextbutton unavailable until we new data or reached the last page.\n        disabled={isPreviousData || page === total}\n      >\n        Next Page\n      </Button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { useParams } from \"react-router\";\nimport { useQuery } from \"react-query\";\nimport { getMoviesInGenre } from \"../services/API\";\nimport MovieCard from \"../components/MovieCard\";\nimport Pagination from \"../components/Pagination\";\nimport Spinner from \"../components/Spinner\";\n\nimport { useUrlSearchParams } from \"use-url-search-params\";\n\nconst GenrePage = () => {\n  const [searchParams, setSearchParams] = useUrlSearchParams(\n    { page: 1 },\n    { page: Number }\n  );\n\n  const [page, setPage] = useState(searchParams.page);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    setSearchParams({ ...searchParams, page });\n  }, [page]);\n\n  const { data, isError, isLoading, error, isPreviousData } = useQuery(\n    [\"genre\", id, searchParams.page],\n    () => getMoviesInGenre(id, searchParams.page),\n    {\n      keepPreviousData: true,\n    }\n  );\n\n  if (isError) return <div>{error}</div>;\n\n  console.log(\"GenrePage:\", data);\n\n  return (\n    <Container>\n      {isLoading && <Spinner />}\n      {data && (\n        <Pagination\n          page={searchParams.page}\n          setPage={setPage}\n          isPreviousData={isPreviousData}\n          total={data[\"total_pages\"]}\n        />\n      )}\n      <Row>\n        {data &&\n          data.results.map((movie, i) => {\n            return (\n              <Col className=\"p-4\" key={i} sm={12} md={3} lg={3}>\n                <MovieCard movie={movie} />{\" \"}\n              </Col>\n            );\n          })}\n      </Row>\n    </Container>\n  );\n};\n\nexport default GenrePage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, ListGroup, Col, Row } from \"react-bootstrap\";\nimport { useQuery } from \"react-query\";\nimport { getGenres } from \"../services/API\";\nimport styles from \"../css/ActorsList.module.css\";\n\nconst GenreListPage = () => {\n  const { data, isError, error } = useQuery(\"genres\", getGenres);\n\n  if (isError) return <div className=\"text-center py-5\">{error}</div>;\n\n  return (\n    <Container className=\"d-flex justify-content-center\">\n      <ListGroup variant=\"flush\" className={styles.listContainer}>\n        <Row className=\"mb-5\">\n          <h1>Genres</h1>\n          {data &&\n            data.genres.map((genre, i) => (\n              <Col key={i} className=\"my-2\">\n                <div className={styles.genreContainer}>\n                  <Link\n                    to={`/genre/${genre.id}`}\n                    style={{ textDecoration: \"none\", color: \"white\" }}\n                  >\n                    {genre.name}\n                  </Link>\n                </div>\n              </Col>\n            ))}\n        </Row>\n      </ListGroup>\n    </Container>\n  );\n};\n\nexport default GenreListPage;\n","import React from \"react\";\nimport { Row, Col, ListGroup, Image } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { prefix } from \"../services/API\";\n\nimport styles from \"../css/ActorsList.module.css\";\n\nconst ActorsList = ({ actors }) => {\n  return (\n    <ListGroup>\n      <Row className=\"mb-5\">\n        {actors.slice(0, 12).map((actor, i) => (\n          <Col xs={6} md={6} lg={2} key={i} className=\"my-2\">\n            <div className={styles.actorContainer}>\n              <Link\n                to={`/actor/${actor.id}`}\n                style={{ textDecoration: \"none\", color: \"white\" }}\n              >\n                <Image\n                  width={90}\n                  height={90}\n                  thumbnail\n                  src={`${prefix}${actor[\"profile_path\"]}`}\n                />\n\n                <div className={styles.actorName}>{actor[\"original_name\"]}</div>\n              </Link>\n            </div>\n          </Col>\n        ))}\n      </Row>\n    </ListGroup>\n  );\n};\n\nexport default ActorsList;\n","import React from \"react\";\nimport { useParams } from \"react-router\";\nimport { useQuery } from \"react-query\";\nimport { getMovieById } from \"../services/API\";\n\nimport styles from \"../css/MoviePage.module.css\";\n\nimport ActorsList from \"../components/ActorsList\";\n\nconst prefix = \"https://image.tmdb.org/t/p/w400/\";\n\nconst MoviePage = () => {\n  const { id } = useParams();\n\n  const { data, isError, error } = useQuery([\"movie, id\"], () =>\n    getMovieById(id)\n  );\n\n  console.log(data);\n\n  if (isError) return <div>{error}</div>;\n\n  return (\n    <div className={styles.moviePageContainer}>\n      {data && (\n        <div className={styles.movieinfocontainer}>\n          <strong className={styles.title}>{data.title}</strong>\n          <div className={styles.miniwrapper}>\n            <div className={styles.posterContainer}>\n              <img\n                className={styles.poster}\n                src={`${prefix}${data[\"poster_path\"]}`}\n                alt=\"movie poster\"\n              />\n            </div>\n            <div className={styles.descContainer}>\n              <p>\n                <span className={styles.bold}>Runtime:</span> {data.runtime} min\n              </p>\n              <p>\n                <span className={styles.bold}>Genre:</span>{\" \"}\n                {data.genres[0].name}\n              </p>\n\n              <p>\n                <span className={styles.bold}>Director:</span>{\" \"}\n                {data.credits.crew[1].name}\n              </p>\n              <p>\n                <span className={styles.bold}>Description:</span>{\" \"}\n                {data.overview}\n              </p>\n            </div>\n          </div>\n          <div className={styles.actors}>\n            <h1>Actors</h1>\n            <ActorsList actors={data.credits.cast} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MoviePage;\n","import React from \"react\";\nimport MovieCard from \"../components/MovieCard\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport { useQuery } from \"react-query\";\nimport { getNowPlaying } from \"../services/API\";\n\nconst MoviesOnCinemaPage = () => {\n  const { data, isLoading, isError, error } = useQuery(\n    \"now-playing\",\n    getNowPlaying\n  );\n\n  return (\n    <Container className=\"mt-4\">\n      {isError && <h1>{error}</h1>}\n\n      {isLoading && <Spinner />}\n\n      <Row className=\"justify-content-center\">\n        {data &&\n          data.results.map((movie, i) => {\n            return (\n              <Col\n                className=\"m-2\"\n                style={{ maxHeight: \"500px\" }}\n                key={i}\n                sm={12}\n                md={4}\n                lg={3}\n              >\n                <MovieCard movie={movie} />\n              </Col>\n            );\n          })}\n      </Row>\n    </Container>\n  );\n};\n\nexport default MoviesOnCinemaPage;\n","import React from \"react\";\nimport MovieCard from \"../components/MovieCard\";\nimport { Spinner } from \"react-bootstrap\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport { useQuery } from \"react-query\";\nimport { getTopRated } from \"../services/API\";\n\nconst TopRatedMovies = () => {\n  const { data, isLoading, isError, error } = useQuery(\n    \"top-rated\",\n    getTopRated\n  );\n\n  return (\n    <Container className=\"mt-4\">\n      {isError && <h1>{error}</h1>}\n\n      {isLoading && <Spinner />}\n\n      <Row className=\"justify-content-center\">\n        {data &&\n          data.results.map((movie, i) => {\n            return (\n              <Col\n                className=\"m-2\"\n                style={{ maxHeight: \"500px\" }}\n                key={i}\n                sm={12}\n                md={4}\n                lg={3}\n              >\n                <MovieCard movie={movie} />\n              </Col>\n            );\n          })}\n      </Row>\n    </Container>\n  );\n};\n\nexport default TopRatedMovies;\n","import React from \"react\";\nimport MovieCard from \"../components/MovieCard\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport { useQuery } from \"react-query\";\nimport { getPopular } from \"../services/API\";\nimport Spinner from \"../components/Spinner\";\n\nconst MostPopularMoviesPage = () => {\n  const { data, isLoading, isError, error } = useQuery(\"popular\", getPopular);\n  return (\n    <Container className=\"mt-4 d-flex\">\n      {isError && <h1>{error}</h1>}\n\n      {isLoading && <Spinner />}\n\n      <Row className=\"justify-content-around\">\n        {data &&\n          data.results.map((movie, i) => {\n            return (\n              <Col\n                key={i}\n                className=\"m-2\"\n                style={{ maxHeight: \"500px\" }}\n                sm={12}\n                md={4}\n                lg={3}\n              >\n                <MovieCard movie={movie} />\n              </Col>\n            );\n          })}\n      </Row>\n    </Container>\n  );\n};\n\nexport default MostPopularMoviesPage;\n","import React from \"react\";\nimport { Row, Col, ListGroup, Image } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"../css/ActorsList.module.css\";\n\nconst MovieList = ({ movies }) => {\n  const prefix = \"https://image.tmdb.org/t/p/w400/\";\n  return (\n    <ListGroup>\n      <Row md={4}>\n        {movies.results.map((movie, i) => {\n          return (\n            <Col xs={6} md={6} lg={2} key={i} className=\"my-2\">\n              <Link\n                to={`/movie/${movie.id}`}\n                style={{ textDecoration: \"none\", color: \"white\" }}\n              >\n                <div className={styles.actorContainer}>\n                  <Image\n                    width={90}\n                    height={90}\n                    thumbnail\n                    src={`${prefix}${movie[\"poster_path\"]}`}\n                  />\n                  <p className={styles.movielistTitle}>\n                    {movie[\"original_title\"]}\n                  </p>\n                </div>\n              </Link>\n            </Col>\n          );\n        })}\n      </Row>\n    </ListGroup>\n  );\n};\n\nexport default MovieList;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { getActorById } from \"../services/API\";\nimport { useQuery } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport Spinner from \"../components/Spinner\";\nimport MovieList from \"../components/MovieList\";\nimport { prefix } from \"../services/API\";\nimport styles from \"../css/ActorPage.module.css\";\n\nconst ActorPage = () => {\n  const { id } = useParams();\n\n  const { data, isError, error, isLoading } = useQuery([\"actor\", id], () =>\n    getActorById(id)\n  );\n\n  return (\n    <Container>\n      {isError && <div>{error}</div>}\n      {isLoading && <Spinner />}\n\n      {data && (\n        <div className={styles.moviePageContainer}>\n          {data && (\n            <div className={styles.movieinfocontainer}>\n              <strong className={styles.title}>{data.actor.name}</strong>\n              <div className={styles.miniwrapper}>\n                <div className={styles.posterContainer}>\n                  <img\n                    className={styles.poster}\n                    src={`${prefix}${data.actor[\"profile_path\"]}`}\n                    alt=\"movie poster\"\n                  />\n                </div>\n\n                <div className={styles.descContainer}>\n                  <p className={styles.bioText}>{data.actor.biography}</p>\n                </div>\n              </div>\n\n              <div className={styles.actorsMovie}>\n                <h2>Other movies where you can see {data.actor.name}</h2>\n                <MovieList movies={data.movies} />\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </Container>\n  );\n};\n\nexport default ActorPage;\n","import HomePage from \"./pages/HomePage\";\nimport Navigation from \"./components/Navigation\";\nimport { Route, Switch } from \"react-router-dom\";\nimport GenrePage from \"./pages/GenrePage\";\nimport GenreListPage from \"./pages/GenreListPage\";\nimport MoviePage from \"./pages/MoviePage\";\nimport MoviesOnCinemaPage from \"./pages/MoviesOnCinemaPage\";\nimport TopRatedMovies from \"./pages/TopRatedMovies\";\nimport MostPopularMoviesPage from \"./pages/MostPopularMoviesPage\";\nimport ActorPage from \"./pages/ActorPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n\n        <Route path=\"/movie/:id\">\n          <MoviePage />\n        </Route>\n        <Route path=\"/genre/:id\">\n          <GenrePage />\n        </Route>\n        <Route path=\"/genre\">\n          <GenreListPage />\n        </Route>\n        <Route path=\"/cinema\">\n          <MoviesOnCinemaPage />\n        </Route>\n        <Route path=\"/top-rated\">\n          <TopRatedMovies />\n        </Route>\n        <Route path=\"/popular\">\n          <MostPopularMoviesPage />\n        </Route>\n        <Route path=\"/actor/:id\">\n          <ActorPage />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnWindowFocus: false,\n      staleTime: 1000 * 2, // 2 seconds\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviePageContainer\":\"MoviePage_moviePageContainer__hMPjr\",\"movieinfocontainer\":\"MoviePage_movieinfocontainer__3T2LW\",\"title\":\"MoviePage_title__aM7y8\",\"miniwrapper\":\"MoviePage_miniwrapper__1eQAy\",\"poster\":\"MoviePage_poster__3ujRm\",\"posterContainer\":\"MoviePage_posterContainer__2tTF0\",\"descContainer\":\"MoviePage_descContainer__1u-AS\",\"actors\":\"MoviePage_actors__1Tryp\",\"posterAndText\":\"MoviePage_posterAndText__1MHWk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviePageContainer\":\"ActorPage_moviePageContainer__1ne8G\",\"movieinfocontainer\":\"ActorPage_movieinfocontainer__1Sz_D\",\"title\":\"ActorPage_title__1bvE-\",\"miniwrapper\":\"ActorPage_miniwrapper__3qIMe\",\"poster\":\"ActorPage_poster__1cBCJ\",\"posterContainer\":\"ActorPage_posterContainer__GrmnU\",\"descContainer\":\"ActorPage_descContainer__LBEDG\",\"bioText\":\"ActorPage_bioText__1KNZe\",\"actorsMovie\":\"ActorPage_actorsMovie__Z4HpS\",\"posterAndText\":\"ActorPage_posterAndText__py023\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actorName\":\"ActorsList_actorName__3QvUd\",\"actorContainer\":\"ActorsList_actorContainer__1Tmvz\",\"movielistTitle\":\"ActorsList_movielistTitle__16gp6\",\"genreContainer\":\"ActorsList_genreContainer__3wFq2\",\"listContainer\":\"ActorsList_listContainer__3b9K1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardText\":\"MovieCard_cardText__O2Eqh\",\"cardTitle\":\"MovieCard_cardTitle__3QvPP\",\"hoverZoom\":\"MovieCard_hoverZoom__XeP9W\",\"second\":\"MovieCard_second__g5jX_\",\"first\":\"MovieCard_first__3AW48\",\"imgAfter\":\"MovieCard_imgAfter__1vUVI\",\"textAfter\":\"MovieCard_textAfter__3iCeG\",\"hoverZoomShow\":\"MovieCard_hoverZoomShow__2sKHF\"};"],"sourceRoot":""}